[{"/Users/vamsee/Developer/vNote/vnote/src/App.tsx":"1","/Users/vamsee/Developer/vNote/vnote/src/index.tsx":"2","/Users/vamsee/Developer/vNote/vnote/src/reportWebVitals.ts":"3","/Users/vamsee/Developer/vNote/vnote/src/Main.tsx":"4","/Users/vamsee/Developer/vNote/vnote/src/Vim.tsx":"5","/Users/vamsee/Developer/vNote/vnote/src/hooks/useApi.tsx":"6","/Users/vamsee/Developer/vNote/vnote/src/config.js":"7","/Users/vamsee/Developer/vNote/vnote/src/state/auth/actions.ts":"8","/Users/vamsee/Developer/vNote/vnote/src/state/auth/reducer.ts":"9","/Users/vamsee/Developer/vNote/vnote/src/state/index.ts":"10","/Users/vamsee/Developer/vNote/vnote/src/Review.tsx":"11","/Users/vamsee/Developer/vNote/vnote/src/state/auth/hooks.ts":"12","/Users/vamsee/Developer/vNote/vnote/src/Auth.tsx":"13","/Users/vamsee/Developer/vNote/vnote/src/Mauth.tsx":"14"},{"size":556,"mtime":1611707175644,"results":"15","hashOfConfig":"16"},{"size":770,"mtime":1638501904629,"results":"17","hashOfConfig":"16"},{"size":425,"mtime":1611707175645,"results":"18","hashOfConfig":"16"},{"size":14664,"mtime":1638513408217,"results":"19","hashOfConfig":"16"},{"size":6607,"mtime":1631152264979,"results":"20","hashOfConfig":"16"},{"size":4587,"mtime":1626117518650,"results":"21","hashOfConfig":"16"},{"size":135,"mtime":1626018216856,"results":"22","hashOfConfig":"16"},{"size":300,"mtime":1631413505556,"results":"23","hashOfConfig":"16"},{"size":698,"mtime":1631418153008,"results":"24","hashOfConfig":"16"},{"size":337,"mtime":1631060782971,"results":"25","hashOfConfig":"16"},{"size":10333,"mtime":1638588633443,"results":"26","hashOfConfig":"16"},{"size":846,"mtime":1631414473281,"results":"27","hashOfConfig":"16"},{"size":2373,"mtime":1631758740534,"results":"28","hashOfConfig":"16"},{"size":700,"mtime":1631483902098,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1huwib0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vamsee/Developer/vNote/vnote/src/App.tsx",[],"/Users/vamsee/Developer/vNote/vnote/src/index.tsx",[],"/Users/vamsee/Developer/vNote/vnote/src/reportWebVitals.ts",[],["64","65"],"/Users/vamsee/Developer/vNote/vnote/src/Main.tsx",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"/Users/vamsee/Developer/vNote/vnote/src/Vim.tsx",["82"],"/Users/vamsee/Developer/vNote/vnote/src/hooks/useApi.tsx",["83","84","85","86","87"],"import {useState, useEffect, useCallback} from 'react'\nimport createPersistedState from 'use-persisted-state'\nimport {apiUrl} from '../config'\nconsole.log(\"MODE: \"+apiUrl)\nexport interface IProps {\n    username:string,\n    password:string,\n    fail: ()=>void\n}\n\nexport interface IPayload {\n    path:string,\n    method:string,\n    body:{}|null,\n    callback: (result:any)=>any,\n}\n\nfunction useApi(props:IProps, payload:IPayload){\n\n    const [accessKey, setAccessKey] = useState('')\n    const useRefreshKeyState = createPersistedState('refreshKey')\n    const [refreshKey, setRefreshKey] = useRefreshKeyState('')\n    //const [refreshKey, setRefreshKey] = useState('')\n    const [refreshKeyIsValid, setRefreshKeyIsValid] = useState<null|boolean>(null)\n    // const apiUrl = 'http://127.0.0.1:8000/api/'\n    // const apiUrl = '/api/'\n    const [accessKeyIsValid, setAccessKeyIsValid] = useState<null|boolean>(null)\n\n    const validHttpCodes = [200, 201, 202, 203, 204]\n    \n    const go = useCallback((accessKey)=>{\n        const {body, method, path} = payload\n        console.log('executing GO:'+accessKey)\n        if(method === 'logout'){\n            return logout(payload.callback)\n        }\n        const options = {\n            method: method,\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+accessKey,\n            },\n            ... (body !== null) && { body: JSON.stringify(body) }\n        }\n        fetch(apiUrl+path,options)\n        .then(response=>{\n            if(!validHttpCodes.includes(response.status)){\n                setAccessKeyIsValid(false)\n            } else {\n                setAccessKeyIsValid(true)\n                response.json()\n                .then(response=>{\n                    payload.callback(response)\n                })\n            }\n        })\n    },[payload])\n\n    function logout(callback:(response:null)=>void){\n        setRefreshKey('')\n        setAccessKey('')\n        setRefreshKeyIsValid(null)\n        setAccessKeyIsValid(null)\n        callback(null)\n    }\n\n    useEffect(()=>{\n        if(accessKeyIsValid===false){\n            console.log('access key is false')\n            // We tried to make a request, but our key is invalid.\n            // We need to use the refresh key\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', },\n                body: JSON.stringify( {'refresh': refreshKey} ),\n            }\n            fetch(apiUrl+'token/refresh/', options)\n            .then(response=>{\n                if(!validHttpCodes.includes(response.status)){\n                    setRefreshKeyIsValid(false)\n                    // this needs to trigger a login event\n                } else {\n                    response.json()\n                    .then(response=>{\n                        setRefreshKeyIsValid(true)\n                        setAccessKey(response.access)\n                        // setAccessKeyIsValid(true)\n                    })\n                }\n            })\n        }\n    },[accessKeyIsValid])\n\n\n    useEffect(()=>{\n        console.log('responding to change in access key:'+accessKey)\n        go(accessKey)\n    },[accessKey,payload])\n\n    useEffect(()=>{\n        if(refreshKeyIsValid===false){\n            // even after trying to login, the RK is invalid\n            // We must straight up log in.\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    username: props.username,\n                    password: props.password,\n                 })\n            }\n            fetch(apiUrl+'token/', options)\n            .then(response=>{\n                console.log(response.status)\n                if(!validHttpCodes.includes(response.status)){\n                    setAccessKeyIsValid(null)\n                    setRefreshKeyIsValid(null)\n                    props.fail()\n                    console.log('total fail')\n                }\n                else { \n                    console.log('login works')\n                    response.json()\n                    .then(response=>{\n                        setAccessKey(response.access)\n                        setRefreshKey(response.refresh)\n                        // setRefreshKeyIsValid(true)\n                        // setAccessKeyIsValid(true) // Commenting this out disables the loop\n                    })\n                }\n            })\n        }\n\n        \n    },[refreshKeyIsValid])\n\n};\n\nexport default useApi\n",["88","89"],"/Users/vamsee/Developer/vNote/vnote/src/config.js",[],"/Users/vamsee/Developer/vNote/vnote/src/state/auth/actions.ts",["90"],"/Users/vamsee/Developer/vNote/vnote/src/state/auth/reducer.ts",[],"/Users/vamsee/Developer/vNote/vnote/src/state/index.ts",["91","92"],"import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport payload from './auth/reducer'\n\nexport const store = configureStore({\n  reducer: {payload}\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppState = ReturnType<typeof store.getState>\nexport type RootState = ReturnType<typeof store.getState>\n",["93","94"],"/Users/vamsee/Developer/vNote/vnote/src/Review.tsx",["95","96","97","98","99","100","101","102","103","104","105","106"],"import {create} from 'domain';\nimport React, {useState, useEffect,} from 'react';\nimport createPersistedState from 'use-persisted-state'\nimport {IPayload} from './hooks/useApi';\nimport './review.css';\n\ninterface IResult {\n  id: number,\n  title: string,\n  content: string,\n  date_created: Date,\n  date_updated: Date,\n  author: number\n}\n\ninterface IDeck {\n  note: IResult,\n  easiness: number,\n  interval: number,\n  repetitions: number,\n  due_date: Date,\n  last_reviewed: Date\n}\n\ninterface ICard {\n  content: string,\n  blanks: Array<{word: string, hidden: boolean}>\n}\n\ninterface IProps {\n  setPayload: (payload:IPayload)=>void,\n  closeModal: ()=>void,\n  updatePostId: (post:number)=>void,\n  backLinks: Array<IResult>\n}\n\n\nfunction Review(props:IProps):JSX.Element {\n\n  const useCards = createPersistedState('cards')\n  const [cards, setCards] = useCards<Array<ICard>|null>(null)\n  const [jsxCards, setJsxCards] = useState<Array<any>>([])\n  const useDeck = createPersistedState('deck')\n  const [deck, _setDeck] = useDeck<Array<IDeck>>([])\n  const useDue = createPersistedState('due')\n  const [due, setDue] = useDue<Array<IDeck>>([])\n  const useIncorrect = createPersistedState('incorrect')\n  const [incorrect, setIncorrect] = useIncorrect<Array<number>>([])\n  const useCorrect = createPersistedState('correct')\n  const [correct, setCorrect] = useCorrect<Array<number>>([])\n  const useDaysAhead = createPersistedState('daysAhead')\n  const [daysAhead, _setDaysAhead] = useDaysAhead<number>(0)\n  const useToday = createPersistedState('today')\n  const [today, setToday] = useToday<Date>(new Date())\n  const [quality, _setQuality] = useState<null|number>(null)\n  const usePageIndex = createPersistedState('pageIndex')\n  const [pageIndex, setPageIndex] = usePageIndex(0)\n  const useCardIndex = createPersistedState('cardIndex')\n  const [cardIndex, setCardIndex] = useCardIndex(0)\n  const useQuery = createPersistedState('query')\n  const [query, setQuery] = useQuery('')\n\n  function setDeck(_deck:Array<any>){\n    const revs = _deck.map((r)=>{\n      const note =  {...r.note, date_created: new Date(r.note.date_created), date_updated: new Date(r.note.date_updated) } \n      return { ...r, note:note, easiness:parseFloat(r.easiness), due_date: new Date(r.due_date), last_reviewed: new Date(r.last_reviewed) }\n    })\n    _setDeck(revs)\n    console.log(revs)\n  }\n\n  function setQuality(quality:string){\n    if ( quality === '' ) {\n      _setQuality(null)\n    } else {\n      _setQuality(parseInt(quality))\n    }\n  }\n\n  function setDaysAhead(days:any){\n    if(!isNaN(days)){\n      _setDaysAhead(parseInt(days))\n    }\n  }\n\n  function extractCards(content:string):Array<string>{\n    // Extract blocks that contain cards\n    const blocks = content.split(/\\n{2,}/)\n    const cards = blocks.filter((x)=>/:{2,}|__/.test(x))\n    return cards\n  }\n\n  function extractBlanks(card:string):Array<string>{\n    const inline = /[^:]::([^:]*?)(?:\\n|$)/g\n    const blank = /(__\\S.*?\\S__)/g\n    const multiline = /[^:]:::((?:\\s(?!___).*)*)/gm\n    var results = []\n    var match\n    while(match=multiline.exec(card)){\n      results.push({content: match[1].trim(), index:match.index})\n    }\n    while(match=inline.exec(card)){\n      results.push({content: match[1].trim(), index:match.index})\n    }\n    while(match=blank.exec(card)){\n      results.push({content: match[1].trim(), index:match.index})\n    }\n    results.sort((a,b)=>a.index-b.index)\n    return results.map((x)=>x.content)\n  }\n\n  function toggleBlank(cardI:number, blankI:number):void{\n    if(cards !==null ){\n      var cardsObject = cards.map((card,pageIndex)=>{\n        if(pageIndex===cardI){\n          var blankObjects = card.blanks.map((blank,blankIndex)=>{\n            if(blankIndex===blankI){\n              return {...blank, hidden:!blank.hidden}\n            } else {\n              return blank\n            }\n          })\n          return {...card, blanks:blankObjects}\n        } else {\n          return card\n        }\n      })\n      setCards(cardsObject)\n    }\n  }\n\n\n  function submitSearch(event:React.FormEvent){\n    event.preventDefault()\n    props.setPayload({\n      path: 'review/search/?query='+query,\n      method: 'GET',\n      body: null,\n      callback: (res)=>{\n        setDeck(res)\n        setIncorrect([])\n        setCorrect([])\n      }\n    })\n  }\n\n  function submitQuality(event:React.FormEvent){\n    event.preventDefault()\n    if (quality != null){\n      props.setPayload({\n        path: 'review/memorize/',\n        method: 'POST',\n        body: {...due[pageIndex],quality:quality},\n        callback: (res)=>{\n          console.log(res)\n          if(parseInt(res.repetitions)===0){\n            setIncorrect(ignore=>[...ignore,parseInt(res.note.id)])\n          } else {\n            setCorrect(ignore=>[...ignore,parseInt(res.note.id)])\n          }\n        }\n      })\n    }\n  }\n\n  function cforward() { \n    if(cards !==null && cardIndex+2 <= cards.length){\n      setCardIndex(cardIndex+1)\n    }\n  }\n\n  function cbackward() { \n    if(cardIndex > 0){\n      setCardIndex(cardIndex-1)\n    }\n  }\n\n  function pforward() { \n    if(pageIndex+2 <= due.length){\n      setPageIndex(pageIndex+1)\n    }\n  }\n\n  function pbackward() { \n    if(pageIndex-1 >= 0){\n      setPageIndex(pageIndex-1)\n    }\n  }\n\n  function Title():JSX.Element {\n    if(due.length>0){\n      return <>{due[pageIndex].note.title}</>\n    }\n    return <></>\n  }\n\n  useEffect(()=>{\n    var jsxcards:Array<any> = []\n    if (cards !==null ){\n      for( const [pageIndex, {content,blanks}] of cards.entries() ){\n        var contentArray:Array<any> = [content+' ']\n        for( const [blankIndex, {word,hidden}] of blanks.entries() ){\n          var append:any = []\n          for(var i=0; i < contentArray.length; i=i+2){\n            const components = contentArray[i].split(word)\n            const visibility = (hidden)?'hidden':'visible';\n            if(contentArray[i].match(word)){\n              var insert =[]\n              for(var y=0; y < components.length; y++){\n                insert.push(components[y])\n                if(components[y+1]){\n                  insert.push(\n                                  <span className={visibility} onClick={()=>toggleBlank(pageIndex,blankIndex)}>{word}</span>\n                                )\n                }\n              }\n              append.push({key:i, items:insert})\n            }\n          }\n          for(const [i, {key,items}] of append.entries()){\n            contentArray.splice(key,1,...items)\n          }\n        }\n        jsxcards.push(contentArray)\n      }\n    }\n    setJsxCards(jsxcards)\n    // setCardIndex(0)\n  },[cards])\n\n  useEffect(()=>{\n    if(due.length>0){\n      console.log(`Loading card ${pageIndex}`)\n      props.updatePostId(due[pageIndex].note.id)\n      var newCards = extractCards(due[pageIndex].note.content).map((card)=>{\n        const blanks = extractBlanks(card).map((blank)=>(\n          {\n            word: blank,\n            hidden: true\n          }\n        ))\n        const cardObject = {\n          content: card,\n          blanks: blanks\n        }\n        return cardObject\n      })\n      if(cards !== null){\n        if( JSON.stringify(cards.map(x=>x.content)) != JSON.stringify(newCards.map(x=>x.content)) ){\n          setCardIndex(0)\n        }\n      }\n      setCards(newCards)\n    } else {\n      setCards(null)\n    }\n  },[pageIndex,due])\n\n\n  useEffect(()=>{\n    const newPages = deck.filter((x)=>x.repetitions===0)\n    const overDuePages = deck.filter((x)=>x.repetitions>0 && x.due_date <= today)\n    var ignore = [...incorrect,...correct]\n    const new_due = [...newPages,...overDuePages].filter(x=>!ignore.includes(x.note.id))\n    if (JSON.stringify(new_due.map(x=>x.note.id)) != JSON.stringify(due.map(x=>x.note.id)) ){\n      setPageIndex(0)\n      setCardIndex(0)\n      setDue(new_due)\n      console.log('WE ARE NOT THE SAME')\n    }\n  },[deck,today,correct,incorrect])\n\n  useEffect(()=>{\n    var date:Date = new Date()\n    date.setDate(date.getDate() + daysAhead)\n    setToday(date)\n    setDeck(deck) // this is only here to unserialize Date fields when waking up from local storage.\n  },[daysAhead])\n\n  useEffect(()=>{\n    if( due.filter(x=>![...correct,...incorrect].includes(x.note.id)).length === 0 ){\n      if ( incorrect.length > 0 ) {\n        setIncorrect([])\n      }\n    }\n  },[correct,incorrect])\n\n\n  return(\n    <>\n\n          <form onSubmit={submitSearch}>\n          <input className=\"greenput\" type=\"text\" defaultValue={query} placeholder=\"Search for Deck\" onChange={(e)=>setQuery(e.target.value)}/>\n          </form>\n\n            <div className=\"review_bar\">\n            <div>            <input className=\"greenput_tight\" defaultValue={daysAhead} placeholder=\"Advance Days\" type=\"text\" onChange={(e)=>setDaysAhead(e.target.value)} /></div>\n            <div>Decks: {deck.length}</div>\n            <div>Due: {due.length}</div>\n            <div>Done: {correct.length}+/{incorrect.length}-</div>\n            <div>Cards: { cards != null ? (<>{cardIndex+1}/{ cards.length }</>):(<>None</>)}</div>\n            </div>\n          <br />\n          <div className=\"main_buttons_wrapper\">\n            <div className=\"button\" onClick={cbackward}>Prev Card</div>\n            <div className=\"button\" onClick={cforward}>Next Card</div>\n            <div className=\"button\" onClick={pbackward}>Prev Deck</div>\n            <div className=\"button\" onClick={pforward}>Next Deck</div>\n            <div className=\"button\" onClick={()=>props.closeModal()}><span style={(props.backLinks.length>0)?{color:'red',fontWeight:'bold'}:{}}>Context</span></div>\n          </div>\n\n          <h1><Title/></h1>\n          <pre>\n          {jsxCards[cardIndex]}\n          </pre>\n          {cards !=null && cardIndex+1===cards.length &&\n          <form onSubmit={submitQuality}>\n          <select className=\"greenput_narrow\" id=\"quality\" onChange={(e)=>setQuality(e.target.value)}>\n          <option value=\"\">---</option>\n          <option value=\"5\">Easy</option>\n          <option value=\"4\">Correct with hessitation</option>\n          <option value=\"3\">Correct but difficult</option>\n          <option value=\"2\">Incorrect, but almost</option>\n          <option value=\"0\">Incorrect, blackout</option>\n          </select>\n          &nbsp;<input className=\"greenput_narrow\" type=\"submit\" value=\"Submit\" />\n          </form>\n          }\n\n    </>\n  )\n}\n\nexport default Review;\n","/Users/vamsee/Developer/vNote/vnote/src/state/auth/hooks.ts",["107"],"/Users/vamsee/Developer/vNote/vnote/src/Auth.tsx",[],"/Users/vamsee/Developer/vNote/vnote/src/Mauth.tsx",["108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":45,"nodeType":"117","messageId":"118","endLine":1,"endColumn":60},{"ruleId":"115","severity":1,"message":"119","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"120","line":37,"column":10,"nodeType":"117","messageId":"118","endLine":37,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":95,"column":11,"nodeType":"117","messageId":"123","endLine":95,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":178,"column":47,"nodeType":"126","messageId":"127","endLine":178,"endColumn":49},{"ruleId":"128","severity":1,"message":"129","line":179,"column":42,"nodeType":"126","messageId":"130","endLine":179,"endColumn":43},{"ruleId":"124","severity":1,"message":"131","line":194,"column":47,"nodeType":"126","messageId":"127","endLine":194,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":271,"column":5,"nodeType":"134","endLine":271,"endColumn":13,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"125","line":295,"column":41,"nodeType":"126","messageId":"127","endLine":295,"endColumn":43},{"ruleId":"124","severity":1,"message":"125","line":298,"column":25,"nodeType":"126","messageId":"127","endLine":298,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":316,"column":36,"nodeType":"138","messageId":"139","endLine":316,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":418,"column":38,"nodeType":"126","messageId":"127","endLine":418,"endColumn":40},{"ruleId":"124","severity":1,"message":"125","line":444,"column":109,"nodeType":"126","messageId":"127","endLine":444,"endColumn":111},{"ruleId":"124","severity":1,"message":"125","line":444,"column":165,"nodeType":"126","messageId":"127","endLine":444,"endColumn":167},{"ruleId":"124","severity":1,"message":"125","line":459,"column":58,"nodeType":"126","messageId":"127","endLine":459,"endColumn":60},{"ruleId":"124","severity":1,"message":"125","line":462,"column":58,"nodeType":"126","messageId":"127","endLine":462,"endColumn":60},{"ruleId":"115","severity":1,"message":"140","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"142","line":43,"column":16,"nodeType":"143","messageId":"144","endLine":43,"endColumn":17,"fix":"145"},{"ruleId":"132","severity":1,"message":"146","line":57,"column":7,"nodeType":"134","endLine":57,"endColumn":16,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"148","line":92,"column":7,"nodeType":"134","endLine":92,"endColumn":25,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"150","line":98,"column":7,"nodeType":"134","endLine":98,"endColumn":26,"suggestions":"151"},{"ruleId":"132","severity":1,"message":"152","line":135,"column":7,"nodeType":"134","endLine":135,"endColumn":26,"suggestions":"153"},{"ruleId":"111","replacedBy":"154"},{"ruleId":"113","replacedBy":"155"},{"ruleId":"115","severity":1,"message":"156","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":17},{"ruleId":"115","severity":1,"message":"157","line":1,"column":26,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"158","line":1,"column":39,"nodeType":"117","messageId":"118","endLine":1,"endColumn":45},{"ruleId":"111","replacedBy":"159"},{"ruleId":"113","replacedBy":"160"},{"ruleId":"115","severity":1,"message":"161","line":1,"column":9,"nodeType":"117","messageId":"118","endLine":1,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":99,"column":11,"nodeType":"164","messageId":"165","endLine":99,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":102,"column":11,"nodeType":"164","messageId":"165","endLine":102,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":105,"column":11,"nodeType":"164","messageId":"165","endLine":105,"endColumn":33},{"ruleId":"115","severity":1,"message":"166","line":220,"column":22,"nodeType":"117","messageId":"118","endLine":220,"endColumn":23},{"ruleId":"132","severity":1,"message":"167","line":229,"column":5,"nodeType":"134","endLine":229,"endColumn":12,"suggestions":"168"},{"ruleId":"124","severity":1,"message":"131","line":249,"column":53,"nodeType":"126","messageId":"127","endLine":249,"endColumn":55},{"ruleId":"132","severity":1,"message":"169","line":257,"column":5,"nodeType":"134","endLine":257,"endColumn":20,"suggestions":"170"},{"ruleId":"124","severity":1,"message":"131","line":265,"column":51,"nodeType":"126","messageId":"127","endLine":265,"endColumn":53},{"ruleId":"132","severity":1,"message":"171","line":271,"column":5,"nodeType":"134","endLine":271,"endColumn":35,"suggestions":"172"},{"ruleId":"132","severity":1,"message":"173","line":278,"column":5,"nodeType":"134","endLine":278,"endColumn":16,"suggestions":"174"},{"ruleId":"132","severity":1,"message":"175","line":286,"column":5,"nodeType":"134","endLine":286,"endColumn":24,"suggestions":"176"},{"ruleId":"115","severity":1,"message":"177","line":1,"column":23,"nodeType":"117","messageId":"118","endLine":1,"endColumn":30},{"ruleId":"115","severity":1,"message":"156","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":25},{"ruleId":"115","severity":1,"message":"178","line":9,"column":20,"nodeType":"117","messageId":"118","endLine":9,"endColumn":31},{"ruleId":"115","severity":1,"message":"179","line":10,"column":20,"nodeType":"117","messageId":"118","endLine":10,"endColumn":31},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","'useApi' is defined but never used.","'authModalIsOpen' is assigned a value but never used.","@typescript-eslint/no-redeclare","'pl' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'getBacklinks', and 'getOutLinks'. Either include them or remove the dependency array.","ArrayExpression",["182"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useImperativeHandle' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"183","text":"184"},"React Hook useCallback has missing dependencies: 'logout' and 'validHttpCodes'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'refreshKey' and 'validHttpCodes'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'go'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'props', 'setRefreshKey', and 'validHttpCodes'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["188"],["180"],["181"],"'IPayload' is defined but never used.","'ThunkAction' is defined but never used.","'Action' is defined but never used.",["180"],["181"],"'create' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'toggleBlank'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'cards', 'props', 'setCardIndex', and 'setCards'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["190"],"React Hook useEffect has missing dependencies: 'due', 'setCardIndex', 'setDue', and 'setPageIndex'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'deck', 'setDeck', and 'setToday'. Either include them or remove the dependency array.",["192"],"React Hook useEffect has missing dependencies: 'due' and 'setIncorrect'. Either include them or remove the dependency array.",["193"],"'useMemo' is defined but never used.","'setUsername' is assigned a value but never used.","'setPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},[1395,1396],"",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [auth, getBacklinks, getOutLinks, postId]",{"range":"214","text":"215"},"Update the dependencies array to be: [logout, payload, validHttpCodes]",{"range":"216","text":"217"},"Update the dependencies array to be: [accessKeyIsValid, refreshKey, validHttpCodes]",{"range":"218","text":"219"},"Update the dependencies array to be: [accessKey, go, payload]",{"range":"220","text":"221"},"Update the dependencies array to be: [props, refreshKeyIsValid, setRefreshKey, validHttpCodes]",{"range":"222","text":"223"},"Update the dependencies array to be: [cards, toggleBlank]",{"range":"224","text":"225"},"Update the dependencies array to be: [pageIndex, due, props, cards, setCards, setCardIndex]",{"range":"226","text":"227"},"Update the dependencies array to be: [deck, today, correct, incorrect, due, setPageIndex, setCardIndex, setDue]",{"range":"228","text":"229"},"Update the dependencies array to be: [daysAhead, deck, setDeck, setToday]",{"range":"230","text":"231"},"Update the dependencies array to be: [correct, due, incorrect, setIncorrect]",{"range":"232","text":"233"},[6713,6721],"[auth, getBacklinks, getOutLinks, postId]",[1845,1854],"[logout, payload, validHttpCodes]",[3066,3084],"[accessKeyIsValid, refreshKey, validHttpCodes]",[3205,3224],"[accessKey, go, payload]",[4539,4558],"[props, refreshKeyIsValid, setRefreshKey, validHttpCodes]",[6577,6584],"[cards, toggleBlank]",[7307,7322],"[pageIndex, due, props, cards, setCards, setCardIndex]",[7826,7856],"[deck, today, correct, incorrect, due, setPageIndex, setCardIndex, setDue]",[8077,8088],"[daysAhead, deck, setDeck, setToday]",[8274,8293],"[correct, due, incorrect, setIncorrect]"]