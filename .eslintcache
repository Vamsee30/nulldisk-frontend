[{"/Users/vamsee/Developer/vNote/vnote/src/App.tsx":"1","/Users/vamsee/Developer/vNote/vnote/src/index.tsx":"2","/Users/vamsee/Developer/vNote/vnote/src/reportWebVitals.ts":"3","/Users/vamsee/Developer/vNote/vnote/src/Main.tsx":"4","/Users/vamsee/Developer/vNote/vnote/src/Vim.tsx":"5","/Users/vamsee/Developer/vNote/vnote/src/hooks/useApi.tsx":"6","/Users/vamsee/Developer/vNote/vnote/src/config.js":"7","/Users/vamsee/Developer/vNote/vnote/src/state/auth/actions.ts":"8","/Users/vamsee/Developer/vNote/vnote/src/state/auth/reducer.ts":"9","/Users/vamsee/Developer/vNote/vnote/src/state/index.ts":"10"},{"size":556,"mtime":1611707175644,"results":"11","hashOfConfig":"12"},{"size":558,"mtime":1631060956728,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1611707175645,"results":"14","hashOfConfig":"12"},{"size":15437,"mtime":1631067983869,"results":"15","hashOfConfig":"12"},{"size":6607,"mtime":1627303068851,"results":"16","hashOfConfig":"12"},{"size":4587,"mtime":1626117518650,"results":"17","hashOfConfig":"12"},{"size":135,"mtime":1626018216856,"results":"18","hashOfConfig":"12"},{"size":160,"mtime":1630884866181,"results":"19","hashOfConfig":"12"},{"size":444,"mtime":1630981605157,"results":"20","hashOfConfig":"12"},{"size":337,"mtime":1631060782971,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1huwib0",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vamsee/Developer/vNote/vnote/src/App.tsx",[],"/Users/vamsee/Developer/vNote/vnote/src/index.tsx",["47","48"],"/Users/vamsee/Developer/vNote/vnote/src/reportWebVitals.ts",[],["49","50"],"/Users/vamsee/Developer/vNote/vnote/src/Main.tsx",["51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"/Users/vamsee/Developer/vNote/vnote/src/Vim.tsx",["65"],"import React, {useImperativeHandle} from 'react';\nimport './index.css';\nimport './Vim.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/addon/dialog/dialog.css';\nimport CodeMirror from 'codemirror';\nimport md5 from 'md5';\n//import CodeMirror from '@jkvim/react-codemirror2'\n//require('codemirror/lib/codemirror.js');\nrequire('codemirror/mode/markdown/markdown.js');\nrequire('codemirror/mode/gfm/gfm.js');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/keymap/vim.js');\nrequire('codemirror/addon/dialog/dialog.js');\nrequire('codemirror/addon/search/searchcursor.js');\nrequire('codemirror/mode/clike/clike.js');\nrequire('codemirror/addon/edit/matchbrackets.js');\n\ninterface IProps{\n  content: string,\n  defaultMsg: string,\n  writeStatus: string,\n  save: (content:string,callback:()=>void)=>void;\n  quit: (override:boolean)=>void;\n  changesCallback: (x:boolean)=>void; // lets parent know when changes have been made\n  ref: React.MutableRefObject<Vim|null>,\n}\ninterface IState{\n  content: string,\n  currentSig: string,\n  lastSig: string,\n  writeStatus: string,\n  commandDisplay: string,\n  vimMode: string,\n  widgets: Array<IWidget>,\n  highlight: boolean,\n}\n\ninterface IWidget {\n  title: string,\n  width: number|null,\n  url: string,\n  line: number,\n  widget: null|any,\n}\n\n\nclass Vim extends React.Component<IProps, IState> {\n\n  private codeInput = React.createRef<HTMLTextAreaElement>();\n  private editor:CodeMirror.Editor|null;\n  \n  static defaultProps = {\n    content: '',\n    defaultMsg: '93',\n    writeStatus: 'File written to database!',\n    save: (content:string)=>{},\n    changesCallback: (x:boolean)=>{},\n  }\n\n  constructor(props: IProps){\n    super(props);\n    this.state = {\n      content: this.props.content,\n      currentSig: '',\n      lastSig: '',\n      writeStatus: this.props.defaultMsg,\n      commandDisplay: '',\n      vimMode: 'normal',\n      widgets: [],\n      highlight: false,\n    }\n    this.editor = null;\n    this.vimrc();\n  }\n\n  componentDidMount(){\n\n    if(this.codeInput.current){\n\n      this.editor = CodeMirror.fromTextArea(this.codeInput.current,{mode:'gfm', keyMap:'vim',theme:'the-matrix', lineNumbers:true, showCursorWhenSelecting: true, lineWrapping:true});\n      var keys = '';\n      this.editor.getDoc().setValue(this.props.content)\n      this.editor.on(\"change\",(edit)=>{\n        const data = edit.getValue()\n        const sig = md5(data)\n        this.setState({\n          content:data,\n          currentSig: sig\n        });\n        if(this.state.lastSig !== sig){\n          this.setState({writeStatus:'Unsaved changes...'})\n          this.props.changesCallback(true)\n        } else{\n          this.setState({writeStatus:'No changes made'})\n          this.props.changesCallback(false)\n        }\n      });\n\n      CodeMirror.on(this.editor, 'vim-keypress', (key:string)=>{\n        keys = keys + key;\n        this.setState({commandDisplay:keys})\n      });\n\n      CodeMirror.on(this.editor, 'vim-command-done', (e:any)=> {\n        keys = '';\n        this.setState({commandDisplay:keys})\n      });\n\n      CodeMirror.on(this.editor, 'vim-mode-change', (e:any)=> {\n        this.setState({vimMode:e.mode})\n      });\n\n      this.focus()\n    \n    }\n\n  }\n\n  focus = () =>{\n    if(this.editor){\n      this.editor.focus()\n    }\n  }\n\n  insert = (text:string) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      var cursor = doc.getCursor()\n      doc.replaceRange(text,cursor)\n    }\n    this.focus()\n  }\n\n\n  flush = (text:string) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      doc.setValue(text)\n      this.setState({\n        currentSig:md5(text),\n        lastSig:md5(text)\n      })\n\n      this.setState({writeStatus:'All Systems Go!'})\n      console.log('flushed data')\n    }\n    this.focus()\n  }\n\n  insert_image = (line:number,src:string,width:null|number) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      const element = document.createElement('img')\n      element.src= src\n      console.log(width)\n      if(width){\n        element.width=width\n      }\n      return doc.addLineWidget(line, element,{above:false, noHScroll:true})\n    }\n  }\n\n  reload_images = () => {\n    var pattern = /!\\[(.*?)\\](\\[width=(\\d{1,})\\])?\\((.*)\\)/\n    var lines = this.state.content.split('\\n')\n    var active_widgets:Array<IWidget> = []\n    this.state.widgets.map(x=>x.widget.clear())\n    for(var i=0;i<lines.length; i++){\n      var match = pattern.exec(lines[i])\n      if(match){\n        var image = {\n          title: match[1],\n          width: (match[3]===null)?null:parseInt(match[3]),\n          url: match[4],\n          line: i+1,\n          widget: this.insert_image(i+1,match[4],(match[3]===null)?null:parseInt(match[3]))\n        }\n        console.log(image)\n        active_widgets.push(image)\n      }\n    }\n    this.setState({\n      widgets:active_widgets\n    })\n  }\n\n\n  vimrc = () =>{\n    CodeMirror.Vim.map('J', '5j', 'normal')\n    CodeMirror.Vim.map('K', '5k', 'normal')\n    CodeMirror.Vim.mapCommand('jk', 'action', 'exitInsertMode', {}, { context: 'insert' });\n\n    CodeMirror.Vim.mapCommand('U', 'action', 'redo', {}, { context: 'normal' });\n\n    CodeMirror.Vim.image_reload = ()=>{\n      this.reload_images()\n    }\n    CodeMirror.Vim.image_disable = () => {\n      this.state.widgets.map(x=>x.widget.clear())\n    }\n    CodeMirror.Vim.quit = () => {\n      this.props.quit(false)\n    }\n    CodeMirror.Vim.wquit = () => {\n      this.props.save(this.state.content,()=>this.props.quit(true))\n    }\n    CodeMirror.commands.save = ()=>{\n      this.props.save(this.state.content,()=>{\n        this.props.changesCallback(false)\n        this.setState({\n          writeStatus:this.props.writeStatus,\n          lastSig: md5(this.state.content),\n          highlight: true,\n        });\n        setTimeout(()=>{\n          this.setState({highlight: false})\n        }, 1000)\n      })\n    };\n  }\n  \n\n  statusBars = () => {\n    const highlight = this.state.highlight ? 'green_highlight':''\n    return (\n      <div className={`statusBar_wrapper ${highlight}`}>\n      <div className=\"statusBar_write\">{this.state.writeStatus}</div>\n        <div className=\"statusBar_buffer\">Key buffer: {this.state.commandDisplay}</div>\n        <div className=\"statusBar_mode\">Vim mode: { this.state.vimMode }</div>\n      </div>\n    )\n  }\n\n  render = () => {\n    const statusBar = this.statusBars()\n    return(\n      <div className=\"vim\">\n        <textarea id=\"code\" name=\"code\" className=\"code\" ref={this.codeInput} ></textarea>\n        {statusBar}\n      </div>\n    )\n  }\n}\n\nexport default Vim;\n",["66","67"],"/Users/vamsee/Developer/vNote/vnote/src/hooks/useApi.tsx",["68","69","70","71","72"],"import {useState, useEffect, useCallback} from 'react'\nimport createPersistedState from 'use-persisted-state'\nimport {apiUrl} from '../config'\nconsole.log(\"MODE: \"+apiUrl)\nexport interface IProps {\n    username:string,\n    password:string,\n    fail: ()=>void\n}\n\nexport interface IPayload {\n    path:string,\n    method:string,\n    body:{}|null,\n    callback: (result:any)=>any,\n}\n\nfunction useApi(props:IProps, payload:IPayload){\n\n    const [accessKey, setAccessKey] = useState('')\n    const useRefreshKeyState = createPersistedState('refreshKey')\n    const [refreshKey, setRefreshKey] = useRefreshKeyState('')\n    //const [refreshKey, setRefreshKey] = useState('')\n    const [refreshKeyIsValid, setRefreshKeyIsValid] = useState<null|boolean>(null)\n    // const apiUrl = 'http://127.0.0.1:8000/api/'\n    // const apiUrl = '/api/'\n    const [accessKeyIsValid, setAccessKeyIsValid] = useState<null|boolean>(null)\n\n    const validHttpCodes = [200, 201, 202, 203, 204]\n    \n    const go = useCallback((accessKey)=>{\n        const {body, method, path} = payload\n        console.log('executing GO:'+accessKey)\n        if(method === 'logout'){\n            return logout(payload.callback)\n        }\n        const options = {\n            method: method,\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+accessKey,\n            },\n            ... (body !== null) && { body: JSON.stringify(body) }\n        }\n        fetch(apiUrl+path,options)\n        .then(response=>{\n            if(!validHttpCodes.includes(response.status)){\n                setAccessKeyIsValid(false)\n            } else {\n                setAccessKeyIsValid(true)\n                response.json()\n                .then(response=>{\n                    payload.callback(response)\n                })\n            }\n        })\n    },[payload])\n\n    function logout(callback:(response:null)=>void){\n        setRefreshKey('')\n        setAccessKey('')\n        setRefreshKeyIsValid(null)\n        setAccessKeyIsValid(null)\n        callback(null)\n    }\n\n    useEffect(()=>{\n        if(accessKeyIsValid===false){\n            console.log('access key is false')\n            // We tried to make a request, but our key is invalid.\n            // We need to use the refresh key\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', },\n                body: JSON.stringify( {'refresh': refreshKey} ),\n            }\n            fetch(apiUrl+'token/refresh/', options)\n            .then(response=>{\n                if(!validHttpCodes.includes(response.status)){\n                    setRefreshKeyIsValid(false)\n                    // this needs to trigger a login event\n                } else {\n                    response.json()\n                    .then(response=>{\n                        setRefreshKeyIsValid(true)\n                        setAccessKey(response.access)\n                        // setAccessKeyIsValid(true)\n                    })\n                }\n            })\n        }\n    },[accessKeyIsValid])\n\n\n    useEffect(()=>{\n        console.log('responding to change in access key:'+accessKey)\n        go(accessKey)\n    },[accessKey,payload])\n\n    useEffect(()=>{\n        if(refreshKeyIsValid===false){\n            // even after trying to login, the RK is invalid\n            // We must straight up log in.\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    username: props.username,\n                    password: props.password,\n                 })\n            }\n            fetch(apiUrl+'token/', options)\n            .then(response=>{\n                console.log(response.status)\n                if(!validHttpCodes.includes(response.status)){\n                    setAccessKeyIsValid(null)\n                    setRefreshKeyIsValid(null)\n                    props.fail()\n                    console.log('total fail')\n                }\n                else { \n                    console.log('login works')\n                    response.json()\n                    .then(response=>{\n                        setAccessKey(response.access)\n                        setRefreshKey(response.refresh)\n                        // setRefreshKeyIsValid(true)\n                        // setAccessKeyIsValid(true) // Commenting this out disables the loop\n                    })\n                }\n            })\n        }\n\n        \n    },[refreshKeyIsValid])\n\n};\n\nexport default useApi\n","/Users/vamsee/Developer/vNote/vnote/src/config.js",[],"/Users/vamsee/Developer/vNote/vnote/src/state/auth/actions.ts",[],"/Users/vamsee/Developer/vNote/vnote/src/state/auth/reducer.ts",[],["73","74"],"/Users/vamsee/Developer/vNote/vnote/src/state/index.ts",["75","76"],{"ruleId":"77","severity":1,"message":"78","line":5,"column":9,"nodeType":"79","messageId":"80","endLine":5,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":6,"column":9,"nodeType":"79","messageId":"80","endLine":6,"endColumn":17},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"77","severity":1,"message":"86","line":1,"column":45,"nodeType":"79","messageId":"80","endLine":1,"endColumn":60},{"ruleId":"87","severity":1,"message":"88","line":109,"column":11,"nodeType":"79","messageId":"89","endLine":109,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":192,"column":47,"nodeType":"92","messageId":"93","endLine":192,"endColumn":49},{"ruleId":"94","severity":1,"message":"95","line":193,"column":42,"nodeType":"92","messageId":"96","endLine":193,"endColumn":43},{"ruleId":"90","severity":1,"message":"97","line":208,"column":47,"nodeType":"92","messageId":"93","endLine":208,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":297,"column":5,"nodeType":"100","endLine":297,"endColumn":13,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"91","line":321,"column":41,"nodeType":"92","messageId":"93","endLine":321,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":324,"column":25,"nodeType":"92","messageId":"93","endLine":324,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":342,"column":36,"nodeType":"104","messageId":"105","endLine":342,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":449,"column":38,"nodeType":"92","messageId":"93","endLine":449,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":475,"column":109,"nodeType":"92","messageId":"93","endLine":475,"endColumn":111},{"ruleId":"90","severity":1,"message":"91","line":475,"column":165,"nodeType":"92","messageId":"93","endLine":475,"endColumn":167},{"ruleId":"90","severity":1,"message":"91","line":490,"column":58,"nodeType":"92","messageId":"93","endLine":490,"endColumn":60},{"ruleId":"90","severity":1,"message":"91","line":493,"column":58,"nodeType":"92","messageId":"93","endLine":493,"endColumn":60},{"ruleId":"77","severity":1,"message":"106","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":35},{"ruleId":"82","replacedBy":"107"},{"ruleId":"84","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":43,"column":16,"nodeType":"111","messageId":"112","endLine":43,"endColumn":17,"fix":"113"},{"ruleId":"98","severity":1,"message":"114","line":57,"column":7,"nodeType":"100","endLine":57,"endColumn":16,"suggestions":"115"},{"ruleId":"98","severity":1,"message":"116","line":92,"column":7,"nodeType":"100","endLine":92,"endColumn":25,"suggestions":"117"},{"ruleId":"98","severity":1,"message":"118","line":98,"column":7,"nodeType":"100","endLine":98,"endColumn":26,"suggestions":"119"},{"ruleId":"98","severity":1,"message":"120","line":135,"column":7,"nodeType":"100","endLine":135,"endColumn":26,"suggestions":"121"},{"ruleId":"82","replacedBy":"122"},{"ruleId":"84","replacedBy":"123"},{"ruleId":"77","severity":1,"message":"124","line":1,"column":26,"nodeType":"79","messageId":"80","endLine":1,"endColumn":37},{"ruleId":"77","severity":1,"message":"125","line":1,"column":39,"nodeType":"79","messageId":"80","endLine":1,"endColumn":45},"@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'useLayoutEffect' is defined but never used.","@typescript-eslint/no-redeclare","'pl' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'getBacklinks', and 'getOutLinks'. Either include them or remove the dependency array.","ArrayExpression",["128"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useImperativeHandle' is defined but never used.",["126"],["127"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"129","text":"130"},"React Hook useCallback has missing dependencies: 'logout' and 'validHttpCodes'. Either include them or remove the dependency array.",["131"],"React Hook useEffect has missing dependencies: 'refreshKey' and 'validHttpCodes'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'go'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'props', 'setRefreshKey', and 'validHttpCodes'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],["126"],["127"],"'ThunkAction' is defined but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},[1395,1396],"",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [auth, getBacklinks, getOutLinks, postId]",{"range":"145","text":"146"},"Update the dependencies array to be: [logout, payload, validHttpCodes]",{"range":"147","text":"148"},"Update the dependencies array to be: [accessKeyIsValid, refreshKey, validHttpCodes]",{"range":"149","text":"150"},"Update the dependencies array to be: [accessKey, go, payload]",{"range":"151","text":"152"},"Update the dependencies array to be: [props, refreshKeyIsValid, setRefreshKey, validHttpCodes]",{"range":"153","text":"154"},[7198,7206],"[auth, getBacklinks, getOutLinks, postId]",[1845,1854],"[logout, payload, validHttpCodes]",[3066,3084],"[accessKeyIsValid, refreshKey, validHttpCodes]",[3205,3224],"[accessKey, go, payload]",[4539,4558],"[props, refreshKeyIsValid, setRefreshKey, validHttpCodes]"]